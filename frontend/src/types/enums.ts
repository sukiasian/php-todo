export enum HttpStatus {
    CONTINUE = 100,
    SWITCHING_PROTOCOLS = 101,
    PROCESSING = 102,
    EARLYHINTS = 103,
    OK = 200,
    CREATED = 201,
    ACCEPTED = 202,
    NON_AUTHORITATIVE_INFORMATION = 203,
    NO_CONTENT = 204,
    RESET_CONTENT = 205,
    PARTIAL_CONTENT = 206,
    AMBIGUOUS = 300,
    MOVED_PERMANENTLY = 301,
    FOUND = 302,
    SEE_OTHER = 303,
    NOT_MODIFIED = 304,
    TEMPORARY_REDIRECT = 307,
    PERMANENT_REDIRECT = 308,
    BAD_REQUEST = 400,
    UNAUTHORIZED = 401,
    PAYMENT_REQUIRED = 402,
    FORBIDDEN = 403,
    NOT_FOUND = 404,
    METHOD_NOT_ALLOWED = 405,
    NOT_ACCEPTABLE = 406,
    PROXY_AUTHENTICATION_REQUIRED = 407,
    REQUEST_TIMEOUT = 408,
    CONFLICT = 409,
    GONE = 410,
    LENGTH_REQUIRED = 411,
    PRECONDITION_FAILED = 412,
    PAYLOAD_TOO_LARGE = 413,
    URI_TOO_LONG = 414,
    UNSUPPORTED_MEDIA_TYPE = 415,
    REQUESTED_RANGE_NOT_SATISFIABLE = 416,
    EXPECTATION_FAILED = 417,
    I_AM_A_TEAPOT = 418,
    MISDIRECTED = 421,
    UNPROCESSABLE_ENTITY = 422,
    FAILED_DEPENDENCY = 424,
    PRECONDITION_REQUIRED = 428,
    TOO_MANY_REQUESTS = 429,
    INTERNAL_SERVER_ERROR = 500,
    NOT_IMPLEMENTED = 501,
    BAD_GATEWAY = 502,
    SERVICE_UNAVAILABLE = 503,
    GATEWAY_TIMEOUT = 504,
    HTTP_VERSION_NOT_SUPPORTED = 505,
}

export enum SagaTask {
	CREATE_TASK = 'CREATE_TASK',

	GET_ALL_TASKS = 'GET_ALL_TASKS',

	DELETE_TASK_BY_ID = 'DELETE_TASK_BY_ID',

	MAKE_TASK_FINISHED = 'MAKE_TASK_FINISHED'
}

export enum ReduxTaskAction { 
	SET_CREATE_TASK_DATA = 'SET_CREATE_TASK_DATA',
	SET_CREATE_TASK_SUCCESS_RESPONSE = 'SET_CREATE_TASK_SUCCESS_RESPONSE',
	SET_CREATE_TASK_FAILURE_RESPONSE = 'SET_CREATE_TASK_FAILURE_RESPONSE',

	SET_GET_ALL_TASKS_SUCCESS_RESPONSE = 'SET_GET_ALL_TASKS_SUCCESS_RESPONSE',
	SET_GET_ALL_TASKS_FAILURE_RESPONSE = 'SET_GET_ALL_TASKS_FAILURE_RESPONSE',


	SET_DELETE_TASK_SUCCESS_RESPONSE = 'SET_DELETE_TASK_SUCCESS_RESPONSE',
	SET_DELETE_TASK_FAILURE_RESPONSE = 'SET_DELETE_TASK_FAILURE_RESPONSE',

	SET_MAKE_TASK_FINISHED_SUCCESS_RESPONSE = 'SET_MAKE_TASK_FINISHED_SUCCESS_RESPONSE',
	SET_MAKE_TASK_FINISHED_FAILURE_RESPONSE = 'SET_MAKE_TASK_FINISHED_FAILURE_RESPONSE'
}

export enum ApiRoute {
	TASKS = '/api/tasks'
}

export enum ReduxDialogueBoxAction { 
	TOGGLE_CONFIRMATION_BOX_IS_OPEN = 'TOGGLE_CONFIRMATION_BOX_IS_OPEN',
	SET_PICKED_TASK_ID = 'SET_PICKED_TASK_ID'
}

export enum EventKey {
    ENTER = 'Enter',
    ESCAPE = 'Escape',
    TAB = 'Tab',
}